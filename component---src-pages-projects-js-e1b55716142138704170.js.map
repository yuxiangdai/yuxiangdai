{"version":3,"sources":["webpack:///./src/components/StyledLink.js","webpack:///./src/pages/projects.js","webpack:///./src/images/site.png","webpack:///./src/styles/projects.module.css","webpack:///./src/images/ballance.png"],"names":["styled","Link","ImageContainer","div","Container","query","ProjectsPage","data","className","styles","headerText","container","row","projectItem","image","fluid","image1","childImageSharp","image2","tellorb","uncanny","turtlebot3","kuka","module","exports"],"mappings":"gOAGmBA,YAAOC,QAAV,gEAAGD,CAAH,sC,yCCQVE,EAAiBF,IAAOG,IAAV,2EAAGH,CAAH,0EAOdI,EAAYJ,IAAOG,IAAV,sEAAGH,CAAH,qHAyHFK,EAAK,aAgEHC,UAhLM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACnB,kBAAC,IAAD,KACE,wBAAIC,UAAWC,IAAOC,YAAtB,YACA,kBAACN,EAAD,CAAWI,UAAWC,IAAOE,WAC3B,yBAAKH,UAAWC,IAAOG,KACrB,yBAAKJ,UAAWC,IAAOI,aACrB,8CACA,kBAACX,EAAD,KACE,kBAAC,IAAD,CACEM,UAAWC,IAAOK,MAClBC,MAAOR,EAAKS,OAAOC,gBAAgBF,SAGvC,2YASF,yBAAKP,UAAWC,IAAOI,aACrB,wCACA,kBAACX,EAAD,KACE,kBAAC,IAAD,CACEM,UAAWC,IAAOK,MAClBC,MAAOR,EAAKW,OAAOD,gBAAgBF,SAGvC,kVAQF,yBAAKP,UAAWC,IAAOI,aACrB,uCACA,kBAACX,EAAD,KACE,kBAAC,IAAD,CACEM,UAAWC,IAAOK,MAClBC,MAAOR,EAAKY,QAAQF,gBAAgBF,SAGxC,6fAWF,yBAAKP,UAAWC,IAAOI,aACrB,uCACA,kBAACX,EAAD,KACE,kBAAC,IAAD,CACEM,UAAWC,IAAOK,MAClBC,MAAOR,EAAKa,QAAQH,gBAAgBF,SAGxC,+dAUF,yBAAKP,UAAWC,IAAOI,aACrB,kDACA,kBAACX,EAAD,KACE,kBAAC,IAAD,CACEM,UAAWC,IAAOK,MAClBC,MAAOR,EAAKc,WAAWJ,gBAAgBF,SAG3C,+UAQF,yBAAKP,UAAWC,IAAOI,aACrB,gDACA,kBAACX,EAAD,KACE,kBAAC,IAAD,CACEM,UAAWC,IAAOK,MAClBC,MAAOR,EAAKe,KAAKL,gBAAgBF,SAGrC,yT,qBC9HVQ,EAAOC,QAAU,IAA0B,oD,qBCC3CD,EAAOC,QAAU,CAAC,YAAc,sCAAsC,MAAQ,gCAAgC,IAAM,8BAA8B,YAAc,wC,qBCDhKD,EAAOC,QAAU,IAA0B","file":"component---src-pages-projects-js-e1b55716142138704170.js","sourcesContent":["import { Link } from 'gatsby'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledLink = styled(Link)`\r\n  color: white;\r\n  &:hover {\r\n    color: grey;\r\n  }\r\n`\r\n\r\nexport default StyledLink\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Layout from '../components/layout'\r\n// import Image from '../components/image'\r\nimport logo from '../images/site.png'\r\nimport ball from '../images/ballance.png'\r\nimport StyledLink from '../components/StyledLink'\r\nimport { graphql } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\nimport styles from '../styles/projects.module.css'\r\n\r\nconst ImageContainer = styled.div`\r\n  display: block;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 10px;\r\n`\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  padding: 0px 1.0875rem 1.45rem;\r\n  padding-top: 0;\r\n  display: flex;\r\n  max-width: 1440px;\r\n  justify-content: center;\r\n`\r\n\r\nconst ProjectsPage = ({ data }) => (\r\n  <Layout>\r\n    <h1 className={styles.headerText}>projects</h1>\r\n    <Container className={styles.container}>\r\n      <div className={styles.row}>\r\n        <div className={styles.projectItem}>\r\n          <h2>yuxiangdai.com</h2>\r\n          <ImageContainer>\r\n            <Img\r\n              className={styles.image}\r\n              fluid={data.image1.childImageSharp.fluid}\r\n            />\r\n          </ImageContainer>\r\n          <p>\r\n            I made this website as an experiment in using the React framework\r\n            GatsbyJS and GraphQL. I first created a template for the website in\r\n            Sketch, replicated the features I wanted in Javascript, and finally\r\n            setup deployments using Github Pages and TravisCI. The photo above\r\n            shows one of the original Sketch designs I based this site off of in\r\n            the initial first design.\r\n          </p>\r\n        </div>\r\n        <div className={styles.projectItem}>\r\n          <h2>Ballance</h2>\r\n          <ImageContainer>\r\n            <Img\r\n              className={styles.image}\r\n              fluid={data.image2.childImageSharp.fluid}\r\n            />\r\n          </ImageContainer>\r\n          <p>\r\n            Ballance is a robotics project which uses feedback control and\r\n            computer vision to balance a ping pong ball on a limited flat\r\n            surface. I used OpenCV to create a HSV filter to track the ball\r\n            position based on its color. The position data is sent to an Arduino\r\n            which sends control signals to the servo motors.\r\n          </p>\r\n        </div>\r\n        <div className={styles.projectItem}>\r\n          <h2>TellORB</h2>\r\n          <ImageContainer>\r\n            <Img\r\n              className={styles.image}\r\n              fluid={data.tellorb.childImageSharp.fluid}\r\n            />\r\n          </ImageContainer>\r\n          <p>\r\n            TellORB was my final year thesis project. The idea was to use a DJI\r\n            Tello drone to map an unknown indoor environment and allow for\r\n            navigation commands to be sent on a 2D GUI interface using vSLAM\r\n            (visual Simultaneous Localization and Mapping) in the form of\r\n            ORB-SLAM2 and local path planning algorithms. An external Dell XPS13\r\n            computer was used for egomotion estimation and a real-time interface\r\n            to the drone using ROS (Robotics Operating System), UDP, and H264\r\n            video decoding.\r\n          </p>\r\n        </div>\r\n        <div className={styles.projectItem}>\r\n          <h2>Uncanny</h2>\r\n          <ImageContainer>\r\n            <Img\r\n              className={styles.image}\r\n              fluid={data.uncanny.childImageSharp.fluid}\r\n            />\r\n          </ImageContainer>\r\n          <p>\r\n            Uncanny was a soup and pop can sorting robot built upon the\r\n            PIC18F4620 microcontroller. Soup cans were separated from pop cans\r\n            based on their size. Soup cans were then sorted based on whether or\r\n            not they still contained a label using conductive V-shaped\r\n            detectors, which align the can and rotate to drop them into the\r\n            corresponding bins. Pop cans were sorted based on whether or not\r\n            they had pop tabs using a push-pull circular conductive detector\r\n          </p>\r\n        </div>\r\n        <div className={styles.projectItem}>\r\n          <h2>TurtleBot Projects</h2>\r\n          <ImageContainer>\r\n            <Img\r\n              className={styles.image}\r\n              fluid={data.turtlebot3.childImageSharp.fluid}\r\n            />\r\n          </ImageContainer>\r\n          <p>\r\n            Various projects were run on the TurtleBot 2 & 3 platforms. These\r\n            include navigation of unknown environments using laser sensors,\r\n            mapping of point cloud data using particle filters, global A* path\r\n            planning, local obstacle avoidance and image detection & feature\r\n            matching using a Microsoft Kinect sensor.\r\n          </p>\r\n        </div>\r\n        <div className={styles.projectItem}>\r\n          <h2>KUKA Robotic Arm</h2>\r\n          <ImageContainer>\r\n            <Img\r\n              className={styles.image}\r\n              fluid={data.kuka.childImageSharp.fluid}\r\n            />\r\n          </ImageContainer>\r\n          <p>\r\n            Simulations for a 6-axis robotic arm were run on the Robotics\r\n            Toolbox for MATLAB. Solving the inverse kinematics in the simulation\r\n            allowed for fine motor control of a real KUKA robotics arm. On the\r\n            right, the arm is shown drawing various shapes and trajectories with\r\n            a pencil.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  </Layout>\r\n)\r\n\r\nexport const query = graphql`\r\n  query {\r\n    image1: file(relativePath: { eq: \"sketch_site.png\" }) {\r\n      childImageSharp {\r\n        # Specify the image processing specifications right in the query.\r\n        # Makes it trivial to update as your page's design changes.\r\n        fluid(maxWidth: 600, quality: 100) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n\r\n    image2: file(relativePath: { eq: \"ballance.png\" }) {\r\n      childImageSharp {\r\n        # Specify the image processing specifications right in the query.\r\n        # Makes it trivial to update as your page's design changes.\r\n        fluid(maxWidth: 300, quality: 100) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n\r\n    uncanny: file(relativePath: { eq: \"uncanny.png\" }) {\r\n      childImageSharp {\r\n        # Specify the image processing specifications right in the query.\r\n        # Makes it trivial to update as your page's design changes.\r\n        fluid(maxWidth: 300, quality: 100) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n\r\n    tellorb: file(relativePath: { eq: \"tello.png\" }) {\r\n      childImageSharp {\r\n        # Specify the image processing specifications right in the query.\r\n        # Makes it trivial to update as your page's design changes.\r\n        fluid(maxWidth: 300, quality: 100) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n\r\n    kuka: file(relativePath: { eq: \"kuka.png\" }) {\r\n      childImageSharp {\r\n        # Specify the image processing specifications right in the query.\r\n        # Makes it trivial to update as your page's design changes.\r\n        fluid(maxWidth: 300, quality: 100) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n\r\n    turtlebot3: file(relativePath: { eq: \"turtle.png\" }) {\r\n      childImageSharp {\r\n        # Specify the image processing specifications right in the query.\r\n        # Makes it trivial to update as your page's design changes.\r\n        fluid(maxWidth: 300, quality: 100) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default ProjectsPage\r\n","module.exports = __webpack_public_path__ + \"static/site-2f98ff7994ad7e626f00925934afcb7e.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerImage\":\"projects-module--headerImage--2WLlR\",\"image\":\"projects-module--image--2uO2R\",\"row\":\"projects-module--row--23sMF\",\"projectItem\":\"projects-module--projectItem--1b_WR\"};","module.exports = __webpack_public_path__ + \"static/ballance-5b00fba0936360fc1854cab032dde3e0.png\";"],"sourceRoot":""}